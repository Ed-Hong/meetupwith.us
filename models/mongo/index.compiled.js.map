{"version":3,"sources":["index.es6"],"names":["connection","close","collections","col","hasOwnProperty","remove","clear","mongoConfig","get","Promise","connect","username","password","host","port","database","console","log","basename","module","filename","db","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","require","join","default","modelName","exports","mongoose"],"mappings":";;;;;;;;;;;;;;;AA0BA;;;;sCAGO,aAAuB;AAC5B,uBAASA,UAAT,CAAoBC,KAApB;AACD,G;;kBAFqBA,K;;;;;AAItB;;;;;;uCAGO,aAAuB;AAC5B,UAAMC,cAAc,mBAASF,UAAT,CAAoBE,WAAxC;AACA,SAAK,MAAMC,GAAX,IAAkBD,WAAlB,EAA+B;AAAE;AAC/B,UAAIA,YAAYE,cAAZ,CAA2BD,GAA3B,CAAJ,EAAqC;AACnCD,oBAAYC,GAAZ,EAAiBE,MAAjB;AACD;AACF;AACF,G;;kBAPqBC,K;;;;;AApCtB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA,MAAMC,cAAc,iBAAOC,GAAP,CAAW,SAAX,CAApB;AACA,mBAASC,OAAT;AACA,mBAASC,OAAT,CAAkB,cAAYH,YAAYI,QAAS,MAAGJ,YAAYK,QAAS,MAAGL,YAAYM,IAAK,MAAGN,YAAYO,IAAK,MAAGP,YAAYQ,QAAS,GAA3I;AACAC,QAAQC,GAAR,CAAa,oCAAkCV,YAAYM,IAAK,MAAGN,YAAYO,IAAK,MAAGP,YAAYQ,QAAS,IAA5G;;AAEA,MAAMG,WAAW,eAAKA,QAAL,CAAcC,OAAOC,QAArB,CAAjB;AACA,MAAMC,KAAK,sBAAc,IAAd,CAAX;;AAEA;;;;AAIA,aAAGC,WAAH,CAAeC,SAAf,EACGC,MADH,CACUC,QAASA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASP,QAAvC,IAAqDO,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAD1F,EAEGC,OAFH,CAEWH,QAAQ;AACf,QAAMI,QAAQC,QAAQ,eAAKC,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAR,EAAoCO,OAAlD;AACAX,KAAGQ,MAAMI,SAAT,IAAsBJ,KAAtB;AACAK,UAAQL,MAAMI,SAAd,IAA2BJ,KAA3B;AACD,CANH;;AA2BAR,GAAGc,QAAH;;kBAEed,E","file":"index.es6","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport config from 'config';\nimport mongoose from 'mongoose';\nimport Promise from 'bluebird';\n\nconst mongoConfig = config.get('MongoDb');\nmongoose.Promise = Promise;\nmongoose.connect(`mongodb://${mongoConfig.username}:${mongoConfig.password}@${mongoConfig.host}:${mongoConfig.port}/${mongoConfig.database}`);\nconsole.log(`Mongo DB [host|port|database]: [${mongoConfig.host}|${mongoConfig.port}|${mongoConfig.database}]`);\n\nconst basename = path.basename(module.filename);\nconst db = Object.create(null);\n\n/* This makes all of the mongodb models available through this single file by exporting all of\n * the individual models. We're importing each <model>.es6 file manually by scanning the directory\n * and then re-exporting the model*/\n\nfs.readdirSync(__dirname)\n  .filter(file => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach(file => {\n    const model = require(path.join(__dirname, file)).default;\n    db[model.modelName] = model;\n    exports[model.modelName] = model;\n  });\n\n/*\n * Closes the connection to mongodb\n */\nexport async function close() {\n  mongoose.connection.close();\n}\n\n/*\n * Clears all collections in mongodb. Used for testing purposes\n */\nexport async function clear() {\n  const collections = mongoose.connection.collections;\n  for (const col in collections) { //eslint-disable-line\n    if (collections.hasOwnProperty(col)) {\n      collections[col].remove();\n    }\n  }\n}\n\ndb.mongoose = mongoose;\n\nexport default db;\n"]}