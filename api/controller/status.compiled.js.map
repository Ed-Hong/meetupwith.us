{"version":3,"sources":["status.es6"],"names":["descrip","bool","Status","create","description","availability","_id","findOne","findById","findOneAndUpdate","updateAvailability","updateDescription"],"mappings":";;;;;;;;;AAEA;;;;;;;sCAMO,WAAsBA,OAAtB,EAA+BC,IAA/B,EAAsC;AAC3C,WAAO,MAAMC,OAAOC,MAAP,CAAc,EAACC,aAAaJ,OAAd,EAAuBK,cAAcJ,IAArC,EAAd,CAAb;AACD,G;;kBAFqBE,M;;;;;AAItB;;;;;;;;uCAKO,WAAwBG,GAAxB,EAA6B;AAClC,WAAO,MAAMJ,OAAOK,OAAP,CAAeD,GAAf,CAAb;AACD,G;;kBAFqBE,Q;;;;;AAItB;;;;;;;;;;uCAOO,WAAgCF,GAAhC,EAAqCF,WAArC,EAAkDC,YAAlD,EAAgE;AACrE,WAAO,MAAMH,OAAOO,gBAAP,CAAwBH,GAAxB,EAA6B,EAACF,WAAD,EAAcC,YAAd,EAA7B,CAAb;AACD,G;;kBAFqBI,gB;;;;;AAItB;;;;;;;;;uCAMO,WAAkCH,GAAlC,EAAwCD,YAAxC,EAAsD;AAC3D,WAAO,MAAMH,OAAOO,gBAAP,CAAwBH,GAAxB,EAA6B,EAACD,YAAD,EAA7B,CAAb;AACD,G;;kBAFqBK,kB;;;;;AAItB;;;;;;;;;uCAMO,WAAiCJ,GAAjC,EAAsCF,WAAtC,EAAmD;AACxD,WAAO,MAAMF,OAAOO,gBAAP,CAAwBH,GAAxB,EAA6B,EAACF,WAAD,EAA7B,CAAb;AACD,G;;kBAFqBO,iB;;;;;AAhDtB;;IAAYT,M","file":"status.es6","sourcesContent":["import * as Status from '../db/status.es6';\n\n/**\n * Creates a Status Object\n * @param {String} descrip: the status's description\n * @param {Boolean} bool: the availbility of the status\n * @returns {Promise}: the created Status object\n */\nexport async function create(descrip, bool ) {\n  return await Status.create({description: descrip, availability: bool});\n}\n\n/**\n * Finds a status from the obectId\n * @param {ObjectId}_id : the objectId to find the status from\n * @returns {Promise}: the found Status\n */\nexport async function findById(_id) {\n  return await Status.findOne(_id);\n}\n\n/**\n * Finds a Status and updates the fields of it\n * @param {ObjectId} _id: the ObjectId to query with\n * @param {String} description: the Status's description to set\n * @param {Boolean} availability: the availability to set\n * @returns {Promise}: the updated Status object\n */\nexport async function findOneAndUpdate(_id, description, availability) {\n  return await Status.findOneAndUpdate(_id, {description, availability});\n}\n\n/**\n * Finds a Status object and availability of it\n * @param {ObjectId} _id: the ObjectId to query with\n * @param {Boolean} availability: the updated availability\n * @returns {Promise}: the updated Status object\n */\nexport async function updateAvailability(_id , availability) {\n  return await Status.findOneAndUpdate(_id, {availability});\n}\n\n/**\n * Finds a Status object and updates the description of it\n * @param {ObjectId} _id: the ObjectId to query with\n * @param {String} description: the description to update it with\n * @returns {Promise}: the updated Status object\n */\nexport async function updateDescription(_id, description) {\n  return await Status.findOneAndUpdate(_id, {description});\n}"]}