{"version":3,"sources":["status.es6"],"names":["attributes","Status","save","create","status","findOne","exec","Error","conditions","updates","options","findOneAndUpdate"],"mappings":";;;;;;;;;AAIA;;;;;;;sCAMO,WAAsBA,UAAtB,EAAkC;AACvC,WAAO,MAAO,IAAIC,MAAJ,CAAWD,UAAX,CAAD,CAAyBE,IAAzB,EAAb;AACD,G;;kBAFqBC,M;;;;AAGtB;;;;;;;;uCAKO,WAAuBH,UAAvB,EAAmC;AACxC,UAAMI,SAAS,MAAMH,OAAOI,OAAP,CAAeL,UAAf,EAA2BM,IAA3B,EAArB;AACA,QAAGF,UAAU,IAAb,EAAmB,MAAM,IAAIG,KAAJ,CAAW;oCAAA,CACFP,UAAW,GADpB,CAAN;AAEnB,WAAOI,MAAP;AACD,G;;kBALqBC,O;;;;;AAOtB;;;;;;;;;;uCAOO,WAAgCG,UAAhC,EAA4CC,OAA5C,EAAqE;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;;AAC1E,UAAMN,SAAS,MAAMH,OAAOU,gBAAP,CAAwBH,UAAxB,EAAoCC,OAApC,EAA6CC,OAA7C,EAAsDJ,IAAtD,EAArB;AACA,QAAKF,UAAW,IAAhB,EAAuB;AACrB,YAAM,IAAIG,KAAJ,CAAW,sDAAoDC,UAAW,mBAAgBC,OAAQ,GAAlG,CAAN;AACD;AACD,WAAOL,MAAP;AACD,G;;kBANqBO,gB;;;;;AA/BtB;;;;;;AACA,MAAMV,SAAS,gBAAOA,MAAtB,C,CAFA","file":"status.es6","sourcesContent":["// created by apoovey 12-26-16\nimport models from '../../models/mongo/index.es6';\nconst Status = models.Status;\n\n/**\n * Creates a Status object based off the schema\n * @param {*} attributes: the attributes to add to the hour of the producers\n * @returns {Promise} the created object\n */\n\nexport async function create(attributes) {\n  return await (new Status(attributes)).save();\n}\n/**\n *Returns a Status object given a query\n *@param {Object} attributes: key value pairs of the attributes we want to query by\n *@returns {Promise}: returns a SocketToken object\n */\nexport async function findOne(attributes) {\n  const status = await Status.findOne(attributes).exec();\n  if(status == null) throw new Error(`Could not find and \n    update status with attributes ${attributes}`);\n  return status\n}\n\n/**\n * \n * @param {Object} conditions: the conditions to find the object by\n * @param {Object} updates: the updated fields\n * @param {Object} options: options to pass for the query and update\n * @returns {Promise}\n */\nexport async function findOneAndUpdate(conditions, updates, options = null) {\n  const status = await Status.findOneAndUpdate(conditions, updates, options).exec();\n  if ((status ==  null)) {\n    throw new Error(`Could not find and update status with attributes: ${conditions} with updates ${updates}`);\n  }\n  return status;\n}\n"]}