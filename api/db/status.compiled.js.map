{"version":3,"sources":["status.es6"],"names":["attributes","save","create","findOne","exec","conditions","updates","options","status","findOneAndUpdate","Utils","isEmpty","Error"],"mappings":";;;;;;;;;AACA;;AAEA;;;;;;;sCAMO,WAAsBA,UAAtB,EAAkC;AACvC,WAAO,MAAO,qBAAWA,UAAX,CAAD,CAAyBC,IAAzB,EAAb;AACD,G;;kBAFqBC,M;;;;AAGtB;;;;;;;;uCAKO,WAAuBF,UAAvB,EAAmC;AACxC,WAAO,MAAM,iBAAOG,OAAP,CAAeH,UAAf,EAA2BI,IAA3B,EAAb;AACD,G;;kBAFqBD,O;;;;;;uCAKf,WAAgCE,UAAhC,EAA4CC,OAA5C,EAAqE;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;;AAC1E,UAAMC,SAAS,MAAM,iBAAOC,gBAAP,CAAwBJ,UAAxB,EAAoCC,OAApC,EAA6CC,OAA7C,EAAsDH,IAAtD,EAArB;AACA,QAAIM,MAAMC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;AACzB,YAAM,IAAII,KAAJ,CAAW,sDAAoDP,UAAW,mBAAgBC,OAAQ,GAAlG,CAAN;AACD;AACD,WAAOE,MAAP;AACD,G;;kBANqBC,gB;;;;;AAtBtB","file":"status.es6","sourcesContent":["import Status from '../../models/mongo/status.es6';\n// const Status = models.Status;\n\n/**\n * Creates a Status object based off the schema\n * @param {*} attributes: the attributes to add to the hour of the producers\n * @returns {Promise} the created object\n */\n\nexport async function create(attributes) {\n  return await (new Status(attributes)).save();\n}\n/**\n *Returns a Status object given a query\n *@param {Object} attributes: key value pairs of the attributes we want to query by\n *@returns {Promise}: returns a SocketToken object\n */\nexport async function findOne(attributes) {\n  return await Status.findOne(attributes).exec();\n}\n\n\nexport async function findOneAndUpdate(conditions, updates, options = null) {\n  const status = await Status.findOneAndUpdate(conditions, updates, options).exec();\n  if (Utils.isEmpty(status)) {\n    throw new Error(`Could not find and update status with attributes: ${conditions} with updates ${updates}`);\n  }\n  return status;\n}\n"]}